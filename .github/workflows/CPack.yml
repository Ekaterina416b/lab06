name: CPack

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      - name: Configure project
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cmake -B build -DCPACK_PACKAGE_VERSION=$VERSION

      - name: Build and create packages
        run: |
          cd build
          cmake --build . --target package
          cpack -G "DEB;TGZ"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            build/*.deb
            build/*.tar.gz

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install WiX and CMake
        run: |
          choco install -y wixtoolset
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Verify WiX installation
        run: where candle.exe light.exe

      - name: Configure project
        run: |
          mkdir build
          cd build
          cmake .. -DCPACK_PACKAGE_VERSION=$env:GITHUB_REF_NAME.Replace('v','')

      - name: Build project
        working-directory: build
        run: cmake --build . --config Release

      - name: Generate MSI package
        working-directory: build
        run: |
          cpack -G WIX -C Release --verbose
          if ($LASTEXITCODE -ne 0) {
            Get-Content "D:/a/lab6.1/lab6.1/build/_CPack_Packages/win64/WIX/wix.log"
            exit 1
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: build/*.msi

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install CMake
        run: brew install cmake

      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          cmake .. -DCPACK_PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}
          cmake --build . --config Release

      - name: Generate package
        working-directory: build
        run: |
          cpack -G DragNDrop

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-package
          path: build/*.dmg

  create-release:
    needs: [linux, windows, macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*-package*'
          merge-multiple: true

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: artifacts/**
