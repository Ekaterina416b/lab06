name: CPack

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]

jobs:
  build-and-package:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y cmake build-essential rpm
          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install -y wixtoolset cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install cmake
          fi

      - name: Configure project
        shell: bash
        run: |
          mkdir -p build
          cd build
          VERSION=${GITHUB_REF#refs/tags/v}
          cmake .. -DCPACK_PACKAGE_VERSION=$VERSION

      - name: Build project
        working-directory: build
        shell: bash
        run: cmake --build . --config Release

      - name: Generate packages
        working-directory: build
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            cpack -G "DEB;TGZ;RPM"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            cpack -G "WIX" || (echo "CPack failed"; ls -la; exit 1)
          elif [ "$RUNNER_OS" == "macOS" ]; then
            cpack -G "DragNDrop"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os }}
          path: |
            build/*.deb
            build/*.tar.gz
            build/*.rpm
            build/*.msi
            build/*.dmg
          if-no-files-found: warn

  create-release:
    needs: build-and-package
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: packages-*
          merge-multiple: true

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            artifacts/**/*
