name: CPack

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential rpm

      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          cmake .. -DCPACK_PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}
          cmake --build . --config Release

      - name: Generate Linux packages
        working-directory: build
        run: |
          cpack -G "DEB;TGZ;RPM"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: build/*.deb build/*.tar.gz build/*.rpm

  windows-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install WIX and CMake
        run: |
          choco install -y wixtoolset cmake --installargs 'ADD_CMAKE_TO_PATH=System'

      - name: Configure and build
        run: |
          mkdir build
          cd build
          cmake .. -DCPACK_PACKAGE_VERSION=${env:GITHUB_REF.Substring("refs/tags/v".Length)}
          cmake --build . --config Release

      - name: Generate Windows package
        working-directory: build
        run: |
          cpack -G WIX || (echo "CPack failed"; dir; exit 1)

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: build/*.msi

  macos-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install CMake
        run: |
          brew install cmake

      - name: Configure and build
        run: |
          mkdir -p build
          cd build
          cmake .. -DCPACK_PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}
          cmake --build . --config Release

      - name: Generate macOS package
        working-directory: build
        run: |
          cpack -G DragNDrop

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-package
          path: build/*.dmg

  create-release:
    needs: [linux-build, windows-build, macos-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*package*'
          merge-multiple: true

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: |
            artifacts/**/*
